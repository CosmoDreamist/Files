<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Êñá‰ª∂ÁÆ°ÁêÜÂô®</title>
    <style>
        .file-list {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 8px;
        }
        .file-item {
            display: flex;
            align-items: center;
            padding: 10px;
            border-bottom: 1px solid #eee;
        }
        .file-item:hover {
            background-color: #f5f5f5;
        }
        .file-icon {
            margin-right: 10px;
        }
        .file-name {
            flex-grow: 1;
        }
    </style>
</head>
<body>
    <div class="file-list" id="fileList">
        <!-- Êñá‰ª∂ÂàóË°®Â∞ÜÂú®ËøôÈáåÂä®ÊÄÅÊòæÁ§∫ -->
    </div>

    <script>
        const GITHUB_TOKEN = 'ÊÇ®ÁöÑGitHub‰ª§Áâå'; // ËØ∑ÊõøÊç¢‰∏∫ÊÇ®ÁöÑGitHub‰∏™‰∫∫ËÆøÈóÆ‰ª§Áâå
        const REPO_OWNER = 'ÊÇ®ÁöÑGitHubÁî®Êà∑Âêç';
        const REPO_NAME = 'ÊÇ®ÁöÑ‰ªìÂ∫ìÂêçÁß∞';

        async function fetchFiles(path = '') {
            try {
                const response = await fetch(`https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/contents/${path}`, {
                    headers: {
                        'Authorization': `token ${GITHUB_TOKEN}`,
                        'Accept': 'application/vnd.github.v3+json'
                    }
                });
                const data = await response.json();
                displayFiles(data);
            } catch (error) {
                console.error('Ëé∑ÂèñÊñá‰ª∂ÂàóË°®Â§±Ë¥•:', error);
            }
        }

        function displayFiles(files) {
            const fileList = document.getElementById('fileList');
            fileList.innerHTML = '';

            files.forEach(file => {
                const fileItem = document.createElement('div');
                fileItem.className = 'file-item';
                
                const icon = document.createElement('span');
                icon.className = 'file-icon';
                icon.innerHTML = file.type === 'dir' ? 'üìÅ' : 'üìÑ';

                const name = document.createElement('span');
                name.className = 'file-name';
                name.textContent = file.name;

                fileItem.appendChild(icon);
                fileItem.appendChild(name);

                if (file.type === 'dir') {
                    fileItem.onclick = () => fetchFiles(file.path);
                } else {
                    fileItem.onclick = () => window.open(file.download_url);
                }

                fileList.appendChild(fileItem);
            });
        }

        // ÂàùÂßãÂä†ËΩΩ
        fetchFiles();
    </script>
</body>
</html>
